{"version":3,"sources":["store/index.js","constants/proptypes.js","components/Button/Button.js","components/TodoItemSort/TodoItemSort.js","components/TodoItemSort/index.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoList/index.js","components/App/App.js","components/App/index.js","index.js"],"names":["BASE_URL","initialState","todos","users","preparedTodos","sortMethod","isLoading","ACTION_TYPES","startLoading","data","type","payload","sortData","value","loadData","dispatch","store","Promise","all","fetch","concat","then","_ref","_ref2","Object","slicedToArray","resTodos","resUsers","json","_ref3","usersList","_ref4","dataTodos","dataUsers","setDataToStore","map","todo","_objectSpread","user","find","id","userId","sortTodos","toConsumableArray","sort","a","b","title","localeCompare","completed","name","createStore","state","arguments","length","undefined","action","applyMiddleware","thunk","userShape","PropTypes","string","isRequired","shape","Button","bool","number","arrayOf","text","listOfTodos","onClick","react_default","createElement","className","TodoItemSort","buttons","label","_this$props","this","props","isActive","sortBtnClasses","classNames","btn-info","btn-outline-secondary","key","Component","EnhancedTodoItemSort","connect","User","TodoItem","_todo$completed","classes","todo-list-item","todo-list-item todo-list-item--done","components_User_User","TodoList","components_TodoItem_TodoItem","EnhancedTodoList","App","disabled","role","aria-hidden","components_Button_Button","EnhancedApp","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.b9b263fb.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nconst initialState = {\n  todos: [],\n  users: [],\n  preparedTodos: [],\n  sortMethod: 'default',\n  isLoading: false,\n};\n\nfunction getTodosWithUsers(todosList, usersList) {\n  return todosList.map(todo => ({\n    ...todo,\n    user: usersList.find(user => user.id === todo.userId),\n  }));\n}\n\nconst ACTION_TYPES = {\n  START_DATA_LOADING: 'START_DATA_LOADING',\n  SET_DATA_TO_STORE: 'SET_DATA_TO-STORE',\n  SORT_DATA: 'SORT_DATA',\n};\n\nconst startLoading = data => ({\n  type: ACTION_TYPES.START_DATA_LOADING,\n  payload: data,\n});\n\nconst setDataToStore = (data, dataUsers) => ({\n  type: ACTION_TYPES.SET_DATA_TO_STORE,\n  payload: {\n    data,\n    users: dataUsers,\n  },\n});\n\nexport const sortData = value => ({\n  type: ACTION_TYPES.SORT_DATA,\n  payload: value,\n});\n\nexport const loadData = () => (dispatch) => {\n  store.dispatch(startLoading());\n  Promise.all([\n    fetch(`${BASE_URL}/todos`),\n    fetch(`${BASE_URL}/users`),\n  ])\n    .then(([resTodos, resUsers]) => Promise.all(\n      [resTodos.json(), resUsers.json()]\n    ))\n    .then(([dataTodos, dataUsers]) => {\n      store.dispatch(\n        setDataToStore(getTodosWithUsers(dataTodos, dataUsers), dataUsers)\n      );\n      store.dispatch(startLoading());\n    });\n};\n\nexport const sortTodos = (todos, preparedTodos, sortMethod) => {\n  switch (sortMethod) {\n    case 'title':\n      return [...todos].sort((a, b) => (a.title.localeCompare(b.title)));\n    case 'status':\n      return [...todos].sort((a, b) => a.completed - b.completed);\n    case 'user':\n      return [...todos].sort((a, b) => a.user.name.localeCompare(b.user.name));\n    default:\n      return preparedTodos;\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.START_DATA_LOADING:\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n      };\n    case ACTION_TYPES.SET_DATA_TO_STORE:\n      return {\n        ...state,\n        todos: action.payload.data,\n        users: action.payload.users,\n        preparedTodos: action.payload.data,\n      };\n    case ACTION_TYPES.SORT_DATA:\n      const { todos, preparedTodos } = state;\n\n      return {\n        ...state,\n        sortMethod: action.payload,\n        todos: sortTodos(todos, preparedTodos, action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","import PropTypes from 'prop-types';\n\nexport const buttonProps = {\n  text: PropTypes.string.isRequired,\n};\n\nconst userShape = PropTypes.shape({\n  name: PropTypes.string,\n}).isRequired;\n\nexport const userProps = {\n  user: userShape,\n};\n\nexport const todoItemSortProps = {\n  sortMethod: PropTypes.string.isRequired,\n};\n\nexport const todoItemProps = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: userShape,\n  }).isRequired,\n};\n\nexport const todoListProps = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      id: PropTypes.number,\n      user: userShape,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport { buttonProps } from '../../constants/proptypes';\n\nimport './Button.css';\n\nconst Button = ({ text, listOfTodos, onClick }) => (\n  <button\n    className=\"btn btn-primary btn--start\"\n    type=\"button\"\n    onClick={() => onClick(listOfTodos)}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = buttonProps;\n\nexport default Button;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { todoItemSortProps } from '../../constants/proptypes';\n\nimport './TodoItemSort.css';\n\nclass TodoItemSort extends Component {\n  buttons = [\n    { name: 'default', label: 'Default' },\n    { name: 'title', label: 'Title' },\n    { name: 'status', label: 'Status' },\n    { name: 'user', label: 'User' },\n  ];\n\n  render() {\n    const { sortMethod, sortData } = this.props;\n\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = sortMethod === name;\n\n      const sortBtnClasses = classNames({\n        'btn-info': isActive,\n        'btn-outline-secondary': !isActive,\n      });\n\n      return (\n        <button\n          type=\"button\"\n          className={`btn ${sortBtnClasses}`}\n          key={name}\n          onClick={() => sortData(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n}\n\nTodoItemSort.propTypes = todoItemSortProps;\n\nexport default TodoItemSort;\n","import { connect } from 'react-redux';\nimport TodoItemSort from './TodoItemSort';\nimport { sortData } from '../../store';\n\nconst EnhancedTodoItemSort = connect(\n  ({ sortMethod }) => ({ sortMethod }),\n  { sortData }\n)(TodoItemSort);\n\nexport {\n  EnhancedTodoItemSort as TodoItemSort,\n};\n","import React from 'react';\nimport { userProps } from '../../constants/proptypes';\nimport './User.css';\n\nconst User = ({ user }) => (\n  <span className=\"todo-list-item__user\">{user.name}</span>\n);\n\nUser.propTypes = userProps;\n\nexport default User;\n","import React from 'react';\nimport classNames from 'classnames';\nimport User from '../User/User';\nimport { todoItemProps } from '../../constants/proptypes';\n\nimport './TodoItem.css';\n\nconst TodoItem = ({ todo }) => {\n  const {\n    title, completed = false, user, id,\n  } = todo;\n\n  const classes = classNames({\n    'todo-list-item': true,\n    'todo-list-item todo-list-item--done': completed,\n  });\n\n  return (\n    <span className={classes}>\n      <span className=\"todo-list-item__id\">{id}</span>\n      <User user={user} />\n      <span className=\"todo-list-item__name\">{title}</span>\n    </span>\n  );\n};\n\nTodoItem.propTypes = todoItemProps;\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { todoListProps } from '../../constants/proptypes';\n\nimport './TodoList.css';\n\nconst TodoList = props => (\n  <ul className=\"list-group todo-list\">\n    {props.todos.map(todo => (\n      <li className=\"list-group-item\" key={todo.id}>\n        <TodoItem todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = todoListProps;\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport TodoList from './TodoList';\nimport { sortTodos } from '../../store';\n\nconst EnhancedTodoList = connect(\n  state => ({\n    todos: state.todos,\n  }),\n  { sortTodos },\n)(TodoList);\n\nexport {\n  EnhancedTodoList as TodoList,\n};\n","import React from 'react';\nimport Button from '../Button/Button';\nimport { TodoItemSort } from '../TodoItemSort';\nimport { TodoList } from '../TodoList';\n\nimport './App.css';\n\nconst App = ({\n  todos, users, isLoading, loadData,\n}) => (\n  <div className=\"App\">\n    <h1>Dynamic list of todos</h1>\n    <div className=\"container\">\n\n      <div className=\"content\">\n        {todos.length === 0\n          ? (\n            <div>\n              {isLoading\n                ? (\n                  <button\n                    className=\"btn btn-primary\"\n                    type=\"button\"\n                    disabled\n                  >\n                    <span\n                      className=\"spinner-border spinner-border-sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                    <span className=\"sr-only\">Loading...</span>\n                  </button>\n                )\n                : ''\n              }\n              <div>\n                <Button\n                  className=\"btn--start\"\n                  text=\"Load\"\n                  onClick={loadData}\n                />\n              </div>\n            </div>\n          )\n          : (\n            <div>\n              <p>\n                <span>Todos: </span>\n                {todos.length}\n              </p>\n\n              <p>\n                <span>Users: </span>\n                {users.length}\n              </p>\n              <TodoItemSort />\n              <TodoList />\n            </div>\n          )\n        }\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { loadData, sortData, sortTodos } from '../../store';\n\nconst mapDispatchToProps = dispatch => ({\n  loadData: () => dispatch(loadData()),\n  sortData: value => dispatch(sortData(value)),\n  sortTodos: () => dispatch(sortTodos()),\n});\n\nconst EnhancedApp = connect(\n  state => ({\n    todos: state.todos,\n    preparedTodos: state.preparedTodos,\n    users: state.users,\n    isLoading: state.isLoading,\n    sortMethod: state.sortMethod,\n  }),\n  mapDispatchToProps,\n)(App);\n\nexport {\n  EnhancedApp as App,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}