{"version":3,"sources":["store/index.js","constants/proptypes.js","components/Button/Button.js","components/TodoItemSort/TodoItemSort.js","components/TodoItemSort/index.js","components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoList/index.js","components/App/App.js","components/App/index.js","index.js"],"names":["initialState","todos","users","preparedTodos","sortMethod","isLoading","ACTION_TYPES","START_DATA_LOADING","SET_DATA_TO_STORE","SORT_DATA","SORT_TYPE","startLoading","data","type","payload","sortType","value","loadData","dispatch","store","Promise","all","fetch","then","_ref","_ref2","Object","slicedToArray","resTodos","resUsers","json","_ref3","usersList","_ref4","dataTodos","dataUsers","map","todo","_objectSpread","user","find","id","userId","sortTodos","sort","a","b","title","localeCompare","completed","name","createStore","state","arguments","length","undefined","action","applyMiddleware","thunk","userShape","PropTypes","string","isRequired","shape","Button","bool","number","arrayOf","text","listOfTodos","onClick","react_default","createElement","className","TodoItemSort","buttons","label","_this$props","this","props","console","log","isActive","sortBtnClasses","classNames","btn-info","btn-outline-secondary","concat","key","Component","mapDispatchToProps","EnhancedTodoItemSort","connect","User","TodoItem","_todo$completed","classes","todo-list-item","todo-list-item todo-list-item--done","components_User_User","TodoList","components_TodoItem_TodoItem","EnhancedTodoList","App","disabled","role","aria-hidden","components_Button_Button","EnhancedApp","ReactDOM","render","Fragment","es","document","getElementById"],"mappings":"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","file":"static/js/main.cbc88001.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nconst initialState = {\n  todos: [],\n  users: [],\n  preparedTodos: [],\n  sortMethod: 'default',\n  isLoading: false,\n};\n\nfunction getTodosWithUsers(todosList, usersList) {\n  return todosList.map(todo => ({\n    ...todo,\n    user: usersList.find(user => user.id === todo.userId),\n  }));\n}\n\nconst ACTION_TYPES = {\n  START_DATA_LOADING: 'START_DATA_LOADING',\n  SET_DATA_TO_STORE: 'SET_DATA_TO-STORE',\n  SORT_DATA: 'SORT_DATA',\n  SORT_TYPE: 'SORT_TYPE',\n\n};\n\nconst startLoading = data => ({\n  type: ACTION_TYPES.START_DATA_LOADING,\n  payload: data,\n});\n\nconst setDataToStore = data => ({\n  type: ACTION_TYPES.SET_DATA_TO_STORE,\n  payload: data,\n});\n\nconst sortData = () => ({\n  type: ACTION_TYPES.SORT_DATA,\n});\n\nexport function sortType(value) {\n  return {\n    type: ACTION_TYPES.SORT_TYPE,\n    payload: value,\n  };\n}\n\nexport const loadData = () => (dispatch) => {\n  store.dispatch(startLoading());\n  Promise.all([\n    fetch(TODOS_URL),\n    fetch(USERS_URL),\n  ])\n    .then(([resTodos, resUsers]) => Promise.all(\n      [resTodos.json(), resUsers.json()]\n    ))\n    .then(([dataTodos, dataUsers]) => {\n      store.dispatch(setDataToStore(getTodosWithUsers(dataTodos, dataUsers)));\n      store.dispatch(startLoading());\n    });\n};\n\nexport const sortTodos = (todos, sortMethod) => {\n  switch (sortMethod) {\n    case 'title':\n      return todos.sort((a, b) => (a.title.localeCompare(b.title)));\n    case 'status':\n      return todos.sort((a, b) => a.completed - b.completed);\n    case 'user':\n      return todos.sort((a, b) => a.user.name.localeCompare(b.user.name));\n    default:\n      return todos;\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.START_DATA_LOADING:\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n      };\n    case ACTION_TYPES.SET_DATA_TO_STORE:\n      return {\n        ...state,\n        todos: action.payload,\n      };\n    case ACTION_TYPES.SORT_TYPE:\n      const { todos } = state;\n\n      return {\n        ...state,\n        sortMethod: action.payload,\n        todos: sortTodos(todos, action.payload),\n      };\n    case ACTION_TYPES.SORT_DATA:\n\n      return {\n        ...state,\n        todos: sortTodos(state.todos, state.sortMethod),\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","import PropTypes from 'prop-types';\n\nexport const ButtonProps = {\n  text: PropTypes.string.isRequired,\n};\n\nconst userShape = PropTypes.shape({\n  name: PropTypes.string,\n}).isRequired;\n\nexport const UserProps = {\n  user: userShape,\n};\n\nexport const TodoItemSortProps = {\n  // onSortChange: PropTypes.func.isRequired,\n  sortMethod: PropTypes.string.isRequired,\n};\n\nexport const TodoItemProps = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    user: userShape,\n  }).isRequired,\n};\n\nexport const TodoListProps = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      id: PropTypes.number,\n      user: userShape,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport { ButtonProps } from '../../constants/proptypes';\n\nimport './Button.css';\n\nconst Button = ({ text, listOfTodos, onClick }) => (\n  <button\n    className=\"btn btn-primary btn--start\"\n    type=\"button\"\n    onClick={() => onClick(listOfTodos)}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = ButtonProps;\n\nexport default Button;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { TodoItemSortProps } from '../../constants/proptypes';\n\nimport './TodoItemSort.css';\n\nclass TodoItemSort extends Component {\n  buttons = [\n    { name: 'default', label: 'Default' },\n    { name: 'title', label: 'Title' },\n    { name: 'status', label: 'Status' },\n    { name: 'user', label: 'User' },\n  ];\n\n  render() {\n    const { sortMethod, sortType } = this.props;\n    console.log('this.props: ', this.props);\n\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = sortMethod === name;\n\n      const sortBtnClasses = classNames({\n        'btn-info': isActive,\n        'btn-outline-secondary': !isActive,\n      });\n\n      return (\n        <button\n          type=\"button\"\n          className={`btn ${sortBtnClasses}`}\n          key={name}\n          onClick={() => sortType(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n}\n\nTodoItemSort.propTypes = TodoItemSortProps;\n\nexport default TodoItemSort;\n","import { connect } from 'react-redux';\nimport TodoItemSort from './TodoItemSort';\nimport { sortType } from '../../store';\n\nconst mapDispatchToProps = {\n  sortType,\n};\n\nconst EnhancedTodoItemSort = connect(\n  ({ sortMethod }) => ({ sortMethod }),\n  mapDispatchToProps\n)(TodoItemSort);\n\nexport {\n  EnhancedTodoItemSort as TodoItemSort,\n};\n","import React from 'react';\nimport { UserProps } from '../../constants/proptypes';\nimport './User.css';\n\nconst User = ({ user }) => (\n  <span className=\"todo-list-item__user\">{user.name}</span>\n);\n\nUser.propTypes = UserProps;\n\nexport default User;\n","import React from 'react';\nimport classNames from 'classnames';\nimport User from '../User/User';\nimport { TodoItemProps } from '../../constants/proptypes';\n\nimport './TodoItem.css';\n\nconst TodoItem = ({ todo }) => {\n  const {\n    title, completed = false, user, id,\n  } = todo;\n\n  const classes = classNames({\n    'todo-list-item': true,\n    'todo-list-item todo-list-item--done': completed,\n  });\n\n  return (\n    <span className={classes}>\n      <span className=\"todo-list-item__id\">{id}</span>\n      <User user={user} />\n      <span className=\"todo-list-item__name\">{title}</span>\n    </span>\n  );\n};\n\nTodoItem.propTypes = TodoItemProps;\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoListProps } from '../../constants/proptypes';\n\nimport './TodoList.css';\n\nconst TodoList = (props) => {\n  console.log('todolist, props: ', props.todos);\n  return (\n    <ul className=\"list-group todo-list\">\n      {props.todos.map(todo => (\n        <li className=\"list-group-item\" key={todo.id}>\n          <TodoItem todo={todo} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = TodoListProps;\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport TodoList from './TodoList';\n\nconst EnhancedTodoList = connect(\n  ({ todos }) => ({ todos })\n)(TodoList);\n\nexport {\n  EnhancedTodoList as TodoList,\n};\n","import React from 'react';\nimport Button from '../Button/Button';\nimport { TodoItemSort } from '../TodoItemSort';\nimport { TodoList } from '../TodoList';\n\nimport './App.css';\n\nconst App = ({\n  todos, users, isLoading, loadData,\n}) => (\n  <div className=\"App\">\n    <h1>Dynamic list of todos</h1>\n    <div className=\"container\">\n\n      <div className=\"content\">\n        {todos.length === 0\n          ? (\n            <div>\n              {isLoading\n                ? (\n                  <button\n                    className=\"btn btn-primary\"\n                    type=\"button\"\n                    disabled\n                  >\n                    <span\n                      className=\"spinner-border spinner-border-sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                    <span className=\"sr-only\">Loading...</span>\n                  </button>\n                )\n                : ''\n              }\n              <div>\n                <Button\n                  className=\"btn--start\"\n                  text=\"Load\"\n                  onClick={loadData}\n                />\n              </div>\n            </div>\n          )\n          : (\n            <div>\n              <p>\n                <span>Todos: </span>\n                {todos.length}\n              </p>\n\n              <p>\n                <span>Users: </span>\n                {users.length}\n              </p>\n              <TodoItemSort />\n              <TodoList />\n            </div>\n          )\n        }\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { loadData, sortType, sortTodos } from '../../store';\n\nconst mapDispatchToProps = dispatch => ({\n  loadData: () => dispatch(loadData()),\n  sortType: value => dispatch(sortType(value)),\n  sortTodos: () => dispatch(sortTodos()),\n});\n\nconst EnhancedApp = connect(\n  state => ({\n    todos: state.todos,\n    preparedTodos: state.preparedTodos,\n    users: state.users,\n    isLoading: state.isLoading,\n    sortMethod: state.sortMethod,\n  }),\n  mapDispatchToProps,\n)(App);\n\nexport {\n  EnhancedApp as App,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render((\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>\n), document.getElementById('root'));\n"],"sourceRoot":""}